[package]
name = "libcrux-ml-kem"
version = "0.0.2-beta.2"
authors = ["Cryspen"]
license = "AGPL-3.0-only"
homepage = "https://github.com/cryspen/libcrux-iot"
edition = "2021"
repository = "https://github.com/cryspen/libcrux-iot"
readme = "README.md"
description = "Libcrux ML-KEM & Kyber implementations"
exclude = [
    "/tests",
    "/implementation_notes.pdf",
    "/c",
    "/proofs",
    "/c.sh",
    "/c.yaml",
    "/hax.py",
]

[lib]
bench = false # so libtest doesn't eat the arguments to criterion

[dependencies]
rand = { version = "0.9", optional = true }
libcrux-platform = { version = "0.0.2-beta.2", path = "../libcrux-platform" }
libcrux-sha3 = { version = "0.0.2-beta.2", path = "../libcrux-sha3" }
libcrux-intrinsics = { version = "0.0.2-beta.2", path = "../libcrux-intrinsics" }
hax-lib = { version = "0.3.0", git = "https://github.com/hacspec/hax/" }

# This is only required for verification.
# The hax config is set by the hax toolchain.
[target.'cfg(hax)'.dependencies]
hax-lib = { version = "0.3.0", git = "https://github.com/hacspec/hax/" }

[features]
# By default all variants and std are enabled.
default = ["mlkem512", "mlkem768", "mlkem1024"]

# Features for the different key sizes of ML-KEM
mlkem512 = []
mlkem768 = []
mlkem1024 = []

# Enable Round 3 Kyber in addition to ML-KEM
kyber = []

# APIs that sample their own randomness
rand = ["dep:rand"]

# std support
std = []

[dev-dependencies]
rand = { version = "0.9" }
serde_json = { version = "1.0" }
serde = { version = "1.0", features = ["derive"] }
hex = { version = "0.4.3", features = ["serde"] }
criterion = "0.5"

[[bench]]
name = "ml-kem"
harness = false

[[example]]
name = "encapsulate"
required-features = ["mlkem768"]

[[example]]
name = "decapsulate"
required-features = ["mlkem768"]

[[example]]
name = "keygen"
required-features = ["mlkem768"]

[package.metadata."docs.rs"]
features = ["pre-verification", "kyber"]
rustdoc-args = ["--cfg", "doc_cfg"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(hax)',
    'cfg(eurydice)',
    'cfg(doc_cfg)',
] }
